<Page
    x:Class="CCB.Views.Domain.InventoryView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:page="using:CCB.ViewModels.Page"
    xmlns:app="using:CCB.ViewModels.App"
    mc:Ignorable="d"
    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">

    <Page.DataContext>
        <page:InventoryPageViewModel/>
    </Page.DataContext>

    <Page.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../App/AppResources.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Page.Resources>

    <!-- Confirmation buttons -->
    <Page.BottomAppBar>
        <CommandBar Style="{StaticResource CommandBarStyle}">
            <CommandBar.Content>
                <TextBlock Style="{StaticResource TextBlockCommandContentStyle}"
                           Text="{Binding ViewStateDescription}" />
            </CommandBar.Content>
            <AppBarButton Icon="Add" Label="Opret" 
                          IsEnabled="{Binding ControlStates[CreateControl].Enabled}"
                          Command="{Binding DataCommand[CreateCommand]}"/>
            <AppBarButton Icon="Edit" Label="Opdater" 
                          IsEnabled="{Binding ControlStates[UpdateControl].Enabled}"
                          Command="{Binding DataCommand[UpdateCommand]}"/>
            <AppBarButton Icon="Delete" Label="Slet" 
                          IsEnabled="{Binding ControlStates[DeleteControl].Enabled}"
                          Command="{Binding DataCommand[DeleteCommand]}"/>
            <AppBarSeparator/>


            <!-- View states -->
            <AppBarButton Icon="Setting" Label="Visningstilstand">
                <AppBarButton.Flyout>
                    <MenuFlyout Placement="Bottom">
                        <MenuFlyoutItem Text="Opret" FontWeight="{Binding MenuFontWeights[CreateMenuItem]}" Command="{Binding StateCommand[CreateStateCommand]}"/>
                        <MenuFlyoutItem Text="Vis" FontWeight="{Binding MenuFontWeights[ReadMenuItem]}" Command="{Binding StateCommand[ReadStateCommand]}"/>
                        <MenuFlyoutItem Text="Opdater" FontWeight="{Binding MenuFontWeights[UpdateMenuItem]}" Command="{Binding StateCommand[UpdateStateCommand]}"/>
                        <MenuFlyoutItem Text="Slet" FontWeight="{Binding MenuFontWeights[DeleteMenuItem]}" Command="{Binding StateCommand[DeleteStateCommand]}"/>
                    </MenuFlyout>
                </AppBarButton.Flyout>
            </AppBarButton>
        </CommandBar>
    </Page.BottomAppBar>

    <!-- Grid definitions should always be within 1* in total width/height, along with needing to equal out to exactly 1* -->
    <Grid Background="{ThemeResource SystemControlAcrylicWindowBrush}">
        <Grid.RowDefinitions>
            <RowDefinition Height="0.1*"/>
            <RowDefinition Height="0.9*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>

        <!-- Header -->
        <TextBlock Grid.Row="0" Grid.Column="0" FontSize="48" TextAlignment="Center" Text="Lager"/>

        <!-- Collection view -->
        <ListView Grid.Row="1" Grid.Column="0" Style="{StaticResource ListViewStyle}"
                  ItemsSource="{Binding SortedItemCollection, Mode=TwoWay}"
                  SelectedItem="{Binding ItemSelected, Mode=TwoWay}"
                  IsEnabled="{Binding ControlStates[ItemSelectorControl].Enabled}"
                  Visibility="{Binding ControlStates[ItemSelectorControl].VisibilityState}">

            <ListView.ItemTemplate>
                <DataTemplate>
                    <StackPanel Style="{StaticResource StackPanelItemTemplateStyle}">
                        <TextBlock Style="{StaticResource TextBlockItemHeaderStyle}" Text="{Binding HeaderText}" />
                        <TextBlock Style="{StaticResource TextBlockItemSeparatorStyle}" Text="-"/>
                        <TextBlock Style="{StaticResource TextBlockItemContentStyle}" Text="{Binding ContentText}" />
                    </StackPanel>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>

        <!-- Details view -->
        <!-- The various ControlStates can be found in the PageViewModels -->
        <StackPanel Grid.Row="1" Grid.Column="1" Style="{StaticResource StackPanelDetailsOuterStyle}">
            <StackPanel Style="{StaticResource StackPanelDetailsMidStyle}">
                <!-- Name of item -->
                <StackPanel Orientation="Horizontal">
                    <TextBlock Style="{StaticResource TextBlockDetailsHeaderStyle}"
                               Text="Navn" />
                    <TextBox Style="{StaticResource TextBoxDetailsStyle}"
                             IsEnabled="{Binding ControlStates[Name].Enabled}"
                             Visibility="{Binding ControlStates[Name].VisibilityState}"
                             Text="{Binding ItemDetails.Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                </StackPanel>
                <!-- Amount of item -->
                <StackPanel Orientation="Horizontal">
                    <TextBlock Style="{StaticResource TextBlockDetailsHeaderStyle}"
                               Text="Antal" />
                    <TextBox Style="{StaticResource TextBoxDetailsStyle}"
                             IsEnabled="False"
                             Visibility="{Binding ControlStates[Amount].VisibilityState}"
                             Text="{Binding ItemDetails.Amount, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                    <Button Content="˄" Command="{Binding ItemDetails.AmountUpCommand}" MinWidth="30"/>
                    <Button Content="˅" Command="{Binding ItemDetails.AmountDownCommand}" MinWidth="30"/>
                </StackPanel>
                <!-- AmountAllocated of item -->
                <StackPanel Orientation="Horizontal">
                    <TextBlock Style="{StaticResource TextBlockDetailsHeaderStyle}"
                               Text="Reserveret" />
                    <TextBox Style="{StaticResource TextBoxDetailsStyle}"
                             IsEnabled="False"
                             Visibility="{Binding ControlStates[AmountAllocated].VisibilityState}"
                             Text="{Binding ItemDetails.AmountAllocated, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                    <Button Content="˄" Command="{Binding ItemDetails.AllocatedUpCommand}" MinWidth="30"/>
                    <Button Content="˅" Command="{Binding ItemDetails.AllocatedDownCommand}" MinWidth="30"/>
                </StackPanel>
                <!-- Number available of item -->
                <StackPanel Orientation="Horizontal">
                    <TextBlock Style="{StaticResource TextBlockDetailsHeaderStyle}"
                               Text="Tilgængeligt" />
                    <TextBox Style="{StaticResource TextBoxDetailsStyle}"
                             IsEnabled="False"
                             Visibility="{Binding ControlStates[AmountAvailable].VisibilityState}"
                             Text="{Binding ItemDetails.AmountAvailable, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                </StackPanel>
            </StackPanel>
        </StackPanel>
    </Grid>
</Page>